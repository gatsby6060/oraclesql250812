
-- drop table EMP_LOG;
CREATE TABLE EMP_LOG(
    L_EMPNO NUMBER,
    L_MGR NUMBER,
    O_SAL NUMBER,
    N_SAL NUMBER,
    L_COMM NUMBER,
    L_ID VARCHAR2(30),
    EVENT VARCHAR2(20),
    L_TIME DATE
);

-- 트리거 테이블은 커밋 안해줘도 댐
CREATE OR REPLACE TRIGGER EMP_TRIGGER
    AFTER
    INSERT OR UPDATE OR DELETE ON EMP
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO EMP_LOG
        VALUES(:NEW.EMPNO, :NEW.MGR, :NEW.SAL, :NEW.SAL, :NEW.COMM, SYS_CONTEXT('USERENV','SESSION_USER'), 'I', SYSDATE );
    ELSIF UPDATING THEN
        INSERT INTO EMP_LOG
        VALUES(:NEW.EMPNO, :NEW.MGR, :OLD.SAL, :NEW.SAL, :NEW.COMM, SYS_CONTEXT('USERENV','SESSION_USER'), 'U', SYSDATE );
    ELSIF DELETING THEN
        RAISE_APPLICATION_ERROR(-20000,'삭제할 수 없습니다.!!!!!!!!!!!!!!메롱!'); --에러를 띄우고 삭제가 불가능하게 함
--        INSERT INTO EMP_LOG
--        VALUES(:OLD.EMPNO, :OLD.MGR, :OLD.SAL, :OLD.SAL, :OLD.COMM, SYS_CONTEXT('USERENV','SESSION_USER'), 'D', SYSDATE );
    END IF;
END;
/

SELECT * FROM EMP ORDER BY EMPNO;

INSERT INTO EMP VALUES(1234, 'TEST', 'CLERK', 7698, SYSDATE, 2000, 500, 20);
UPDATE EMP
SET SAL = SAL + 200
WHERE EMPNO= 7499;
UPDATE EMP
SET SAL = SAL + 200
WHERE EMPNO= 7521;
DELETE FROM EMP WHERE EMPNO = '1234';
COMMIT;
SELECT * FROM EMP_LOG;

INSERT INTO EMP VALUES(1111, 'TEST', 'CLERK', 7698, SYSDATE, 2000, 500, 20);
DELETE FROM EMP WHERE EMPNO = '1111';

COMMIT;






--
--트리거 연습문제(대상 테이블 : PROFESSOR)
--테이블 생성 : 
--	테이블명 => PROFESSOR_LOG
--	컬럼 => PROFNO(NUMBER), NAME(VARCHAR(20)), PAY(NUMBER), ID, CDATETIME(DATE), EVENT(VARCHAR(10))
--	(ID는 오라클 접속 ID, CDATETIME은 생성날짜-현재시간)
--
--호출 : PROFESSOR 테이블의 INSERT, UPDATE, DELETE
--결과 : 
--	INSERT => PROFESSOR_LOG 테이블에 각 컬럼 값 채우기, EVENT의 경우 'I'로 삽입
--	UPDATE => PROFESSOR_LOG 테이블에 각 컬럼 값 채우기, EVENT의 경우 'U'로 삽입
--	DELETE => 사용자 정의 오류를 생성 후 '삭제 불가능' 오류 메시지 출력

CREATE TABLE PROFESSOR_LOG(
    PROFNO NUMBER,
    NAME VARCHAR(20),
    PAY NUMBER,
    ID VARCHAR2(30),
    CDATETIME DATE,
    EVENT VARCHAR2(10)
);

CREATE OR REPLACE TRIGGER PROFESSOR_TRIGGER
    BEFORE
    INSERT OR UPDATE OR DELETE ON PROFESSOR
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO PROFESSOR_LOG
        VALUES(:NEW.PROFNO, :NEW.NAME, :NEW.PAY, SYS_CONTEXT('USERENV','SESSION_USER'),SYSDATE , 'I' );
    ELSIF UPDATING THEN
        INSERT INTO PROFESSOR_LOG
        VALUES(:NEW.PROFNO, :NEW.NAME, :NEW.PAY, SYS_CONTEXT('USERENV','SESSION_USER'),SYSDATE , 'U' );
    ELSIF DELETING THEN
        RAISE_APPLICATION_ERROR(-20000,'삭제할 수 없습니다.!!!!!!!!!!!!!!메롱!'); --에러를 띄우고 삭제가 불가능하게 함
--        INSERT INTO PROFESSOR_LOG
--         VALUES(:NEW.PROFNO, :NEW.NAME, :NEW.PAY, SYS_CONTEXT('USERENV','SESSION_USER'),SYSDATE , 'D' );
    END IF;
END;
/

SELECT * FROM PROFESSOR;
SELECT * FROM PROFESSOR_LOG;
INSERT INTO PROFESSOR (PROFNO, NAME,ID, POSITION,PAY , HIREDATE) VALUES(1111,'테스트','ABCD','정교수',100, '19991212');
DELETE FROM PROFESSOR WHERE PROFNO = '1111';
UPDATE PROFESSOR
SET PAY = PAY + 200
WHERE PROFNO= 1111;