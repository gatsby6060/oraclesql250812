-- 사용자 정의 함수
CREATE OR REPLACE FUNCTION REVIEW1(P_NUMBER IN NUMBER)
RETURN NUMBER
IS
BEGIN
    RETURN P_NUMBER * 10;
END;
/

SELECT ENAME, SAL, REVIEW1(SAL), REVIEW1(10)
FROM EMP;


-- 프로시져
SELECT * FROM PROFESSOR;
CREATE OR REPLACE PROCEDURE REVIEW2
    (
        P_PROFNO IN PROFESSOR.PROFNO%TYPE,
        P_BONUS IN PROFESSOR.BONUS%TYPE
    )
IS
    P_COUNT NUMBER;
BEGIN
    UPDATE PROFESSOR
    SET
        BONUS = NVL(BONUS, 0) + P_BONUS
    WHERE PROFNO = P_PROFNO;
    P_COUNT := SQL%ROWCOUNT; --한개의 행이 영향받아서 1이 들어갈것임(정상적이라면)
    IF P_COUNT = 0 THEN
        DBMS_OUTPUT.PUT_LINE('해당 교수번호가 존재하지 않습니다.');
    ELSIF P_COUNT =  1 THEN
        DBMS_OUTPUT.PUT_LINE('정상적으로 수정되었습니다.');
    ELSE
         DBMS_OUTPUT.PUT_LINE('2개이상의 교수가 수정되었습니다.');
    END IF;
    COMMIT;
END;
/
--SET SERVEROUTPUT ON; 이거 할떄마다 해줘야 프린트문이 보이는듯함...
EXECUTE REVIEW2(1001,10);

EXECUTE HEIGHT_UPDATE(20153075,1);
-- 20153075 학번 학생의 키가 1증가
-- 없는 학번을 입력 후 실행하면 '해당 학생이 없습니다' 출력
-- 키가 업데이트 되었으면 '수정되었습니다' 출력
SELECT * FROM STUDENT;

CREATE OR REPLACE PROCEDURE HEIGHT_UPDATE
    (
        P_STUNO IN STUDENT.STU_NO%TYPE,
        P_HEIGHT IN STUDENT.STU_HEIGHT%TYPE
    )
IS
    PCOUNT NUMBER;
BEGIN
    UPDATE STUDENT 
    SET STU_HEIGHT = NVL(STU_HEIGHT,0) + P_HEIGHT
    WHERE STU_NO = P_STUNO;
    PCOUNT := SQL%ROWCOUNT;
    IF PCOUNT = 0 THEN
    DBMS_OUTPUT.PUT_LINE('해당 학생이 없습니다');
    ELSIF PCOUNT = 1 THEN
    DBMS_OUTPUT.PUT_LINE(P_STUNO || '학번 학생이 수정되었습니다');
    ELSE 
    DBMS_OUTPUT.PUT_LINE('뭔가 이상합니다. 수정된 학생수가 0이나 1이 아닙니다.');
    END IF;
    COMMIT;
END;
/

SELECT * FROM STUDENT;
EXECUTE HEIGHT_UPDATE(20153075,1);

CREATE OR REPLACE PROCEDURE STUINFO
(P_STUNO IN STUDENT.STU_NO%TYPE)
IS
    P_NAME STUDENT.STU_NAME%TYPE; --일단 프로시져 내부 변수 만듬
    P_DEPT STUDENT.STU_DEPT%TYPE;
    P_GRADE STUDENT.STU_GRADE%TYPE;
BEGIN
    SELECT STU_NAME, STU_DEPT, STU_GRADE
    INTO   P_NAME,   P_DEPT,   P_GRADE --프로시져내부에서 만든 함수에 위 셀렉트문 출력 순서대로 넣는다.
    FROM STUDENT
    WHERE STU_NO = P_STUNO;
    
    DBMS_OUTPUT.PUT_LINE('이름 : ' || P_NAME); --내부변수의 값을 출력한다.
    DBMS_OUTPUT.PUT_LINE('학과 : ' || P_DEPT);
    DBMS_OUTPUT.PUT_LINE('학년 : ' || P_GRADE);
END;
/


EXECUTE STUINFO(20153075);